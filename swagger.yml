openapi: 3.0.3
info:
  title: Swagger Vortex - Order
  description: |-
    This is a project for documentation of API Contract of Order.

  termsOfService: toDo
  contact:
    email: technology@vortex-paas.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.1

servers:
  - url: https://vortex-paas.sand-box.com
tags:
  - name: Order
    description: Everything about your Order
    externalDocs:
      description: Read more
      url: http://vortex-paas.com/doc/ticket
      
paths:
  /check/v1/orders:
    post:
      tags:
        - Order
      summary: Add a new order
      description: Adding a new order from a partner
      operationId: addOrder
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/PartnerID"
      requestBody:
        description: Add a new order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderBase"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortOrder"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Conflict"                
        "422":
          description: Unprocessable entity        
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnprocessableEntity"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order
    get:
      tags:
        - Order
      summary: Get a list of all orders
      description: Get a list of all orders in
      operationId: findOrders
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/PartnerID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order

  /check/v1/orders/{orderId}:
    get:
      tags:
        - Order
      summary: Get an Order details
      description: Get an Order details by internal Order
      operationId: findOrderDetailsByInternalOrder
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/PartnerID"
        - $ref: "#/components/parameters/OrderID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Details"
            application/xml:
              schema:
                $ref: "#/components/schemas/Details"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order
            
    patch:
      tags:
        - Order
      summary: Update a Order
      description: Update a Order details by internal Order
      operationId: updateOrderDetailsByInternalOrderId
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/PartnerID"
        - $ref: "#/components/parameters/OrderID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Details"
        "204":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NoContent"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - api_key: []

  /check/v1/orders/reference/{reference}:
    get:
      tags:
        - Order
      summary: Get an Order
      description: Get an Order with a specific reference
      operationId: findOrderByReference
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/PartnerID"
        - $ref: "#/components/parameters/Reference"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortOrder"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order

components:
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Token bearer pre generate by oauth request
      required: true
      explode: true
      schema:
        type: string
        example: "Bearer GHViphopimn46871HAiouybo21594"
    PartnerID:
      name: PartnerID
      in: header
      description: Partner's ID
      required: true
      schema:
        type: string
        format: uuid
        example: c884f438-c850-11ed-afa1-0242ac120002
    OrderID:
      name: OrderID
      in: path
      description: Vortex Order ID
      required: true
      schema:
        type: string
        format: uuid
        example: 9f190647-7615-43ab-9fc6-8129af51fbc4
    Reference:
      name: Reference
      in: path
      description: Partner's store order ID
      required: true
      schema:
        type: string
  schemas:
    OrderBase:
      type: object
      properties:
        info:
          description: |
            Informações do pedido
            Order infos
          $ref: "#/components/schemas/Info"
        items:
          type: array
          description: |
            Descrição dos itens do pedido
            Order items description
          items:
            type: object
            $ref: "#/components/schemas/Item"
        customer:
          description: |
            Dados de cobrança.
            Billing data
          $ref: "#/components/schemas/Customer"
        shipping:
          description: |
            Dados de entrega
            Shipping data
          $ref: "#/components/schemas/Shipping"
        payments:
          description: |
            Dados do pagamento
            Payment data
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Payment"

    Details:
      allOf:
        - $ref: "#/components/schemas/OrderBase"
      type: object
      required:
        - partnerId
        - order
        - orderStatus
      properties:
        partnerId:
          type: string
          format: uuid
          description: |
            Codigo do parceiro
            Partner's ID
          example: c884f438-c850-11ed-afa1-0242ac120002
        partner:
          type: string
          description: |
            Nome da loja parceira
            Partner's store name
          example: MegaLeo
        score:
          type: integer
          format: int64
          maxLength: 10
          description: |
            Pontuação de risco
            Score
          example: 10
        OrderID:
          type: string
          format: uuid
          description: |
            Codigo do pedido Vortex
            Vortex order ID
          example: 9f190647-7615-43ab-9fc6-8129af51fbc4
        createDate:
          type: string
          description: |
            Data de criação
            Create date
          example: "2023-03-09T21:38:59.9894222"
        updateDate:
          type: string
          description: |
            Data de atualização
            Update date
          example: "2023-03-09T21:38:59.9894222"
        orderStatus:
          description: |
            Status do pedido
            Status
          $ref: "#/components/schemas/OrderStatus"
        issuerRelationship:
          type: boolean
          description: |
            Relacionamento com emissor
            Issuer relationship
          example: true
        
    Info:
      type: object
      required:
        - reference
        - orderDateTime
        - amount
        - totalAmount
        - originChannel
        - businessId
      properties:
        reference:
          type: string
          description: |
            Codigo do pedido loja parceira
            Partner's store order ID
          example: 1512
        orderDateTime:
          type: string
          description: |
            Data do pedido
            Order date
          example: "2023-03-09T21:38:59.9894222"
        relationshipType:
          type: string
          description: |
            Tipo de relacionamento entre cliente e titular
            Type of relationship between customer and cardholder
          example: Amigos de trabalho
        amount:
          type: number
          format: double
          description: |
            Valor dos itens
            Items amount
          example: 10000
        totalAmount:
          type: number
          format: double
          description: |
            Valor total do pedido
            Total amount order
          example: 15995
        discountamount:
          type: number
          format: double
          description: |
            Valor do disconto aplicado
            Discoint amount applied
          example: 0
        ip:
          type: string
          description: |
            IP do pedido
            Order IP
          example: "192.168.0.1"
        originChannel:
          type: string
          description: |
            Canal de origem
            Origin channel
          example: website
        businessId:
          type: number
          description: |
            Código identificador de negócio
            Business ID
          example: 1
        MCC:
          type: number
          description: |
            Codigo de categoria do estabelecimento
            Merchant category code
          example: 1
        SLA:
          type: number
          description: |
            Acordo de Nível de Serviço
            Service Level Agreement
          example: 30

    ShippingInfo:
      type: object
      properties:
        courier:
          type: string
          description: |
            Transportadora
            Carriers
          example: Fedex
        shippingType:
          type: string
          description: |
            Tipo de entrega
            Shipping description
          example: 1
        shippingTime:
          type: string
          description: |
            Prazo de entrega
            Shipping deadline
          example: 5 dias úteis
        shippingAmount:
          type: number
          description: |
            Valor do frete
            Porterage's value
          example: 5559
        pickUpStoreDocument:
          type: string
          description: |
            Documento de retirada na loja
            Store retreat document
          example: 12345678910

    Item:
      type: object
      properties:
        itemCode:
          type: string
          description: |
            Código do item
            Item Code
          example: "59845"
        itemName:
          type: string
          description: |
            Nome do item
            Item name
          example: Iphone13 mini 256gb
        amount:
          type: number
          description: |
            Valor unitário do item
            Item unitary value
          example: 530000
        quantity:
          type: number
          description: |
            Quantidade de itens
            Items quantity
          example: 1
        categoryCode:
          type: number
          description: |
            Codigo de categoria
            Category code
          example: 1
        categoryName:
          type: string
          description: |
            Nome da categoria
            Category name
          example: Smartphone
        isGift:
          type: boolean
          description: |
            É presente?
            Is it a gift?
          example: false
        isMarketPlace:
          type: boolean
          description: |
            É marketplace?
            Is it a Marketplace?
          example: true
        sellerInfo:
          $ref: "#/components/schemas/SellerInfo"
        shippingInfo:
          $ref: "#/components/schemas/ShippingInfo"

    SellerInfo:
      type: object
      properties:
        sellerName:
          type: string
          description: |
            Nome do vendedor
            Seller's name
          example: Loja do Juquinha
        sellerDocument:
          type: string
          description: |
            Documento do vendedor
            Seller's document
          example: 52645678910



    Customer:
      type: object
      properties:
        client:
          description: |
            Cliente da Customer
            Billing's client
          $ref: "#/components/schemas/Client"
        address:
          description: |
            Endereço da cobrança
            Billing's address
          $ref: "#/components/schemas/Address"
        phones:
          description: |
            Telefones da cobrança
            Billing's phone
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Phone"

    Shipping:
      type: object
      properties:
        client:
          description: |
            Cliente da entrega
            Shipping's client
          $ref: "#/components/schemas/Client"
        address:
          description: |
            Endereço da entrega
            Shipping's address
          $ref: "#/components/schemas/Address"
        phones:
          description: |
            Telefones da entrega
            Shipping's phone
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Phone"

    Payment:
      type: object
      properties:
        client:
          $ref: "#/components/schemas/Client"
        address:
          $ref: "#/components/schemas/Address"
        phones:
          type: array
          items:
            $ref: "#/components/schemas/Phone"
        amount:
          type: number
          description: "Valor pago"
          example: 15995
        currency:
          type: integer
          description: "Moeda"
          example: 986

        paymentMethod:
          type: string
          description: |
            Metodos de pagamento
            Payment methods
            **The below table defines the metho code**
            | Method Code    | Method Name |
            | ---------------| ------------| 
            | 1              | credit      | 
            | 2              | debit       |
            | 3              | pix         |
            | 4              | voucher     |
            | 5              | transfer    |
          example: credit
          enum:
            - credit  
            - debit   
            - pix     
            - voucher 
            - transfer
        paymentDetails:
          oneOf:
            - $ref: "#/components/schemas/TransferPayment"
            - $ref: "#/components/schemas/CreditCardPayment"
            - $ref: "#/components/schemas/DebitCardPayment"
            - $ref: "#/components/schemas/PixPayment"
            - $ref: "#/components/schemas/VoucherPayment"
            

    CreditCardPayment:
      type: object
      properties:
        card:
          $ref: "#/components/schemas/Card"
        authentication:
          $ref: "#/components/schemas/Authentication"
        capture:
          type: boolean
          example: false
        descriptor:
          type: string
          example: "ECOMMERCE MERCHANT"
        recurrence:
          type: boolean
          example: false
        installments:
          type: integer
          example: 1


    DebitCardPayment:
      type: object
      properties:
        card:
          $ref: "#/components/schemas/Card"
        authentication:
          $ref: "#/components/schemas/Authentication"
        descriptor:
          type: string
          example: "ECOMMERCE MERCHANT"
        recurrence:
          type: boolean
          example: false  


    PixPayment:
      type: object
      properties:
        pixInfo:
          type: string
          description: "Informações do Pix"
          example: "Chave: 1234567890"

    VoucherPayment:
      type: object
      properties:
        voucherCode:
          type: string
          description: "Código do voucher"
          example: "VOUCHER123"

    TransferPayment:
      type: object
      properties:
        senderInfo:
          $ref: "#/components/schemas/TransferPartyInfo"
        recipientInfo:
          $ref: "#/components/schemas/TransferPartyInfo"
      description: "Informações da transferência"
      example:
        senderInfo:
          name: Remetente
          document: Documento Remetente
          bank: "Banco Remetente"
          branch: "Agência Remetente"
          account: "Conta Remetente"
        recipientInfo:
          name: Destinatário
          document: Documento Destinatário
          bank: "Banco Destinatário"
          branch: "Agência Destinatária"
          account: "Conta Destinatária"

          
    TransferPartyInfo:
      type: object
      properties:
        name:
          type: string
          description: "Nome do titular da conta"
          example: "Nome do Titular"
        document:
          type: string
          description: "Número do documento do titular"
          example: "123.456.789-01"
        bank:
          type: string
          description: "Nome do banco"
          example: "Banco XYZ"
        branch:
          type: string
          description: "Número da agência"
          example: "1234"
        account:
          type: string
          description: "Número da conta"
          example: "5678"

    Authentication:
      type: object
      properties:
        type:
          type: string
          example: "3Dsecure"
        "3Dsecure":
          type: object
          properties:
            mpi:
              type: string
              example: "thirdParty"
            eci:
              type: string
              example: "05"
            cavv:
              type: string
              example: "BwABBylVaQAAAAFwllVpAAAAAAA="
            dsTransactionId:
              type: string
              example: "Nmp3VFdWMlEwZ05pWGN3SGo4TDA="
            version:
              type: string
              example: "2"


    Client:
      type: object
      properties:
        clientType:
          type: number
          description: |
            Tipo do cliente
            Client type
          example: 1
        document:
          type: string
          description: |
            Documento do cliente
            Client's document
          example: 12345678910
        name:
          type: string
          description: |
            Nome do cliente
            Client's name
          example: John Ronald Tolkien
        birthDate:
          type: string
          description: |
            Data de nascimento do cliente
            Client's date of birth
          example: "1988-02-10"
        email:
          type: string
          description: |
            E-mail do cliente
            Client's email
          example: client@email.com.br
        gender:
          type: string
          description: |
            Genero
            Gender
          example: M

    Address:
      type: object
      properties:
        street:
          type: string
          description: |
            Logradouro
            Address
          example: Quincas Borba
        number:
          type: string
          description: |
            Numero na rua
            Address number
          example: 31
        additionalInformation:
          type: string
          description: |
            Complemento
            Complement
          example: Bloco A - Apto 410
        district:
          type: string
          description: |
            Bairro
            District
          example: Vila Nova Cachoeirinha
        city:
          type: string
          description: |
            Cidade
            City
          example: São Paulo
        state:
          type: string
          description: |
            Estado
            Estate
          example: SP
        zipcode:
          type: string
          description: |
            CEP
            Postal code / Zip code
          example: 08090-070
        country:
          type: string
          description: |
            Pais
            Country
          example: Brasil
        complement:
          type: string
          description: |
            Ponto de referencia
            Landmark
          example: Proximo ao Shopping Bourbon

    Phone:
      type: object
      properties:
        type:
          type: number
          description: |
            Tipo de telefone
            Phone type
          example: 1
        ddi:
          type: number
          description: |
            DDI
          example: 55
        ddd:
          type: number
          description: |
            DDD
            Area code
          example: 11
        phoneNumber:
          type: number
          description: |
            Numero de telefone
            Phone number
          example: 999999999
        extension:
          type: string
          description: |
            Ramal
            Extension
          example: 2552

    Card:
      type: object
      properties:
        maskedPAN:
          type: string
          description: |
            Cartão mascarado
            Masked PAN
          example: 123456xxxxxx1234
        hash:
          type: string
          description: |
            ***
            The cardholder document
          example: "12345678945612301234569874563210"
        bin:
          type: string
          description: |
            Bin
            The cardholder document
          example: 123456
        end:
          type: string
          description: |
            Final do cartão
            Name printed on card
          example: 1234
        brandCode:
          type: number
          description: |
            Codigo da bandeira
            Brand code
            **The below table defines the brands code**
            | Method Code    | Method Name |
            | ---------------| ------------| 
            | 1              | Visa        | 
            | 2              | MasterCard  |
            | 3              | Diners      |
            | 4              | Outros      |
          example: 1
        expirationMonth:
          type: string
          description: |
            Mes de expiração do cartão
            Month's date of expiration
          example: 05
        expirationYear:
          type: string
          description: |
            Ano de expiração do cartão
            Year's date of expiration
          example: 2029


    OrderStatus:
      type: object
      properties:
        annotations:
          type: array
          items:
            type: string
            description: |
              Observações
              Observations
            example: analyser request recived
        status:
          type: string
          description: |
            Status
            Status
          example: pending


    OrdersList:
      type: object
      description: |
        Lista de pedidos
        Order's list
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/ShortOrder"

    ShortOrder:
      type: object
      properties:
        partnerId:
          type: string
          format: uuid
          description: |
            Codigo do parceiro
            Partner's ID
          example: c884f438-c850-11ed-afa1-0242ac120002
        partner:
          type: string
          description: |
            Nome da loja parceira
            Partner's store name
          example: MegaLeo
        order:
          type: string
          format: uuid
          description: |
            Codigo do pedido de analise Vortex
            Vortex order ID
          example: 9f190647-7615-43ab-9fc6-8129af51fbc4
        reference:
          type: string
          description: |
            Codigo do pedido loja parceira
            Partner's store order ID
          example: 1512
        orderDateTime:
          type: string
          description: |
            Data do pedido
            Order's date
          example: "2023-03-09T21:38:59.9894222"
        ticketStatus:
          description: |
            Status do pedido
            Order status
          $ref: "#/components/schemas/OrderStatus"
        
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Response code
        message:
          type: string
          example: Response message

  responses:
    NoContent:
      description: |
        No Content
      $ref: '#/components/schemas/Error'
    BadRequest:
      description: |
        Bad Request
      $ref: '#/components/schemas/Error'
    Unauthorized:
      description: |
        Unauthorized
      $ref: '#/components/schemas/Error'
    Forbidden:
      description: |
        Forbidden
      $ref: '#/components/schemas/Error'
    NotFound:
      description: |
        Not Found
      $ref: '#/components/schemas/Error'
    Conflict:
      description: |
        Conflict
      $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: |
        Unprocessable Content
      $ref: '#/components/schemas/Error'
    InternalServerError:
      description: |
        Internal Server Error
      $ref: '#/components/schemas/Error'


  securitySchemes:
    vortexOauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vortex-paas/v1/oauth/partner/{partnerId}
          scopes:
            order: toDo
            user: toDo
            partner: toDo

    api_key:
      type: apiKey
      name: x-api-key 
      in: header