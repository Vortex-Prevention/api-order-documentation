openapi: 3.0.3
info:
  title: Swagger Vortex - Order -> OpenAPI 3.0
  description: |-
    This is a project for documentation of API Contract of Order.

  termsOfService: toDo
  contact:
    email: technology@vortex-paas.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
  - url: https://vortex-paas.sand-box.com
tags:
  - name: Orders
    description: Everything about your Orders
    externalDocs:
      description: Read more
      url: http://vortex-paas.com/doc/orders
      
paths:
  /orders/v1/order:
    post:
      tags:
        - Orders
      summary: Add a new order
      description: Adding a new order from a partner
      operationId: addOrder
      parameters:
        - name: Authorization
          in: header
          description: Token bearer pre generate by oauth request
          required: true
          explode: true
          schema:
            type: string
            example: "Bearer GHViphopimn46871HAiouybo21594"
        - name: partnerId
          in: header
          description: identifier of the partner that is adding a new order
          required: true
          explode: true
          schema:
            type: integer
            example: 989189289
      requestBody:
        description: Add a new order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderBase"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortOrder"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Conflict"                
        "422":
          description: Unprocessable entity        
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnprocessableEntity"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"

      security:
        - vortexOauth:
            - order
    get:
      tags:
        - Orders
      summary: Get a list of all orders
      description: Get a list of all orders in
      operationId: findOrders
      parameters:
        - name: Authorization
          in: header
          description: Token bearer pre generate by oauth request
          required: true
          explode: true
          schema:
            type: string
            example: "Bearer GHViphopimn46871HAiouybo21594"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order

  /orders/v1/orders/partnerId/{partnerId}:
    get:
      tags:
        - Orders
      summary: Get a list of orders
      description: Get a list of orders from a particular partner
      operationId: findOrdersByPartnerId
      parameters:
        - name: Authorization
          in: header
          description: Token bearer pre generate by oauth request
          required: true
          explode: true
          schema:
            type: string
            example: "Bearer GHViphopimn46871HAiouybo21594"
        - name: partnerId
          in: path
          description: ID of partner to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order

  /orders/v1/order/partnerId/{partnerId}/partnerOrderId/{partnerOrderId}:
    get:
      tags:
        - Orders
      summary: Get an order
      description: Get an order with a specific code
      operationId: findOrdersByPartnerOrderId
      parameters:
        - name: Authorization
          in: header
          description: Token bearer pre generate by oauth request
          required: true
          explode: true
          schema:
            type: string
            example: "Bearer GHViphopimn46871HAiouybo21594"
        - name: partnerOrderId
          in: path
          description: ID of partner to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortOrder"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order

  /orders/v1/order/details/vortexOrderId/{vortexOrderId}:
    get:
      tags:
        - Orders
      summary: Get an orders details
      description: Get an orders details by internal order id
      operationId: findOrdersDetailsByInternalOrderId
      parameters:
        - name: Authorization
          in: header
          description: Token bearer pre generate by oauth request
          required: true
          explode: true
          schema:
            type: string
            example: "Bearer GHViphopimn46871HAiouybo21594"
        - name: partnerId
          in: path
          description: ID of partner to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
            application/xml:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - vortexOauth:
            - order
    patch:
      tags:
        - Orders
      summary: Update an orders details
      description: Update an orders details by internal order id
      operationId: updateOrdersDetailsByInternalOrderId
      parameters:
        - name: x-api-key 
          in: header
          description: API Key 
          required: true
          schema:
            type: string
            example: "71HAiouphopG68imnybo2159HVi44"
        - name: partnerId
          in: path
          description: ID of partner to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "204":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NoContent"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Forbidden"
        "500":
          description: Internal server error       
          content:
            application/json:
              schema:
                $ref: "#/components/responses/InternalServerError"
      security:
        - api_key: []

components:
  schemas:
    OrderBase:
      type: object
      properties:
        orderInfo:
          description: |
            Informações do pedido
            Order infos
          $ref: "#/components/schemas/OrderInfo"
        orderItems:
          type: array
          description: |
            Descrição dos itens do pedido
            Order items description
          items:
            type: object
            $ref: "#/components/schemas/OrderItem"
        billingData:
          description: |
            Dados de cobrança.
            Billing data
          $ref: "#/components/schemas/BillingData"
        shippingData:
          description: |
            Dados de entrega
            Shipping data
          $ref: "#/components/schemas/ShippingData"
        paymentData:
          description: |
            Dados do pagamento
            Payment data
          $ref: "#/components/schemas/PaymentsData"

    OrderDetails:
      allOf:
        - $ref: "#/components/schemas/OrderBase"
      type: object
      properties:
        partner:
          type: string
          description: |
            Nome da loja parceira


          example: MegaLeo
        score:
          type: integer
          format: int64
          description: |
            Pontuação de risco
            Score
          example: 10
        vortexOrderId:
          type: string
          format: uuid
          description: |
            Codigo do pedido Vortex
            Vortex Order ID
          example: 9f190647-7615-43ab-9fc6-8129af51fbc4
        createDate:
          type: string
          description: |
            Data de criação
            Create date
          example: "2023-03-09T21:38:59.9894222"
        updateDate:
          type: string
          description: |
            Data de atualização
            Update date
          example: "2023-03-09T21:38:59.9894222"
        orderStatus:
          description: |
            Status do pedido
            Status
          $ref: "#/components/schemas/OrderStatus"
        issuerRelationship:
          type: boolean
          description: |
            Relacionamento com emissor
            Issuer relationship
          example: true
        
    OrderInfo:
      type: object
      properties:
        partnerOrderId:
          type: integer
          format: int64
          description: |
            Codigo do pedido loja parceira
            Partner order ID
          example: 1512
        orderDateTime:
          type: string
          description: |
            Data do pedido
            Order date
          example: "2023-03-09T21:38:59.9894222"
        relationshipType:
          type: string
          description: |
            Tipo de relacionamento entre cliente e titular
            Type of relationship between customer and cardholder
          example: Amigos de trabalho
        amount:
          type: number
          format: double
          description: |
            Valor dos itens
            Items amount
          example: 10000
        totalAmount:
          type: number
          format: double
          description: |
            Valor total do pedido
            Total amount order
          example: 15995
        discountamount:
          type: number
          format: double
          description: |
            Valor do disconto aplicado
            Discoint amount applied
          example: 0
        ip:
          type: string
          description: |
            IP do pedido
            Order IP
          example: "192.168.0.1"
        isGift:
          type: boolean
          description: |
            É presente?
            Is it gift?
          example: false
        originChannel:
          type: string
          description: |
            Canal de origem
            Origin channel
          example: website
        businessId:
          type: number
          description: |
            Código identificador de negócio
            Business ID
          example: 1
        MCC:
          type: number
          description: |
            Codigo de categoria do estabelecimento
            Merchant category code
          example: 1
        SLA:
          type: number
          description: |
            Acordo de Nível de Serviço
            Service Level Agreement
          example: 30

    OrderItem:
      type: object
      properties:
        itemCode:
          type: string
          description: |
            Codigo do item
            Item Code
          example: "59845"
        itemName:
          type: string
          description: |
            Nome do item
            Item name
          example: Iphone13 mini 256gb
        amount:
          type: number
          description: |
            Valor unitario do item
            Item unitary value
          example: 530000
        quantity:
          type: number
          description: |
            Quantidade de itens
            Items quantity
          example: 1
        categoryCode:
          type: number
          description: |
            Codigo de categoria
            Category code
          example: 1
        categoryName:
          type: string
          description: |
            Nome da categoria
            Category name
          example: Iphone13 mini 256gb
        isGift:
          type: boolean
          description: |
            É presente?
              Is it a gift?
          example: false
        isMarketPlace:
          type: boolean
          description: |
            É marketplace?
              Is it a Marketplace?
          example: true
        sellerName:
          type: string
          description: |
            Nome do vendedor
            Saler's name
          example: Loja do Juquinha
        sellerDocument:
          type: string
          description: |
            Documento do vendedor
            Saler's document
          example: 52645678910
        courier:
          type: string
          description: |
            Transportadora
            Carriers
          example: Fedex

    BillingData:
      type: object
      properties:
        client:
          description: |
            Cliente da cobrança
            Billing's client
          $ref: "#/components/schemas/Client"
        address:
          description: |
            Endereço da cobrança
            Billing's address
          $ref: "#/components/schemas/Address"
        phones:
          description: |
            Telefones da cobrança
            Billing's phone
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Phone"

    ShippingData:
      type: object
      properties:
        client:
          description: |
            Cliente da entrega
            Shipping's client
          $ref: "#/components/schemas/Client"
        address:
          description: |
            Cliente da entrega
            Shipping's client
          $ref: "#/components/schemas/Address"
        phones:
          description: |
            Cliente da entrega
            Shipping's client
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Phone"
        deliveryType:
          type: string
          description: |
            Tipo de entrega
            Shipping description
          example: 1
        deliveryTime:
          type: string
          description: |
            Prazo de entrega
            Shipping deadline
          example: 5 dias úteis
        shippingAmount:
          type: number
          description: |
            Valor do frete
            Porterage's value
          example: 5559
        pickUpStoreDocument:
          type: string
          description: |
            Documento de retirada na loja
            Store retreat document
          example: 12345678910

    PaymentsData:
      type: object
      properties:
        paymentDateTime:
          type: string
          description: |
            Data do pagamento
            Payday
          example: "2023-03-09T21:38:59.9894222"
        amount:
          type: number
          format: double
          description: |
            Valor pago
            Amount paid
          example: 15995
        paymentMethod:
          type: number
          description: |
            Metodos de pagamento
            Payment methods
            **The below table defines the metho code**
            | Method Code    | Method Name |
            | ---------------| ------------| 
            | 1              | credit      | 
            | 2              | debit       |
            | 3              | pix         |
            | 4              | voucher     |
            | 5              | transfer    |
          example: 1
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        installmentsQuantity:
          type: integer
          description: |
            Quantidade de parcelas
            Number of installments
          example: 2
        currency:
          type: integer
          description: |
            Moeda
            Currency
          example: 986
        card:
          description: |
            Informações do cartão para os metodos credito, debito e voucher

          $ref: "#/components/schemas/Card"
        address:
          description: |
            Endereço do pagamento
            Payment Address
          $ref: "#/components/schemas/Address"

    Client:
      type: object
      properties:
        clientType:
          type: number
          description: |
            Tipo do cliente
            Client type
          example: 1
        document:
          type: string
          description: |
            Documento do cliente
            Client's document
          example: 12345678910
        name:
          type: string
          description: |
            Nome do cliente
            Client's name
          example: John Ronald Tolkien
        birthDate:
          type: string
          description: |
            Data de nascimento do cliente
            Client's date of birth
          example: "1988-02-10"
        email:
          type: string
          description: |
            E-mail do cliente
            Client's email
          example: client@email.com.br
        gender:
          type: string
          description: |
            Genero
            Gender
          example: M

    Address:
      type: object
      properties:
        street:
          type: string
          description: |
            Logradouro
            Address
          example: Quincas Borba
        number:
          type: string
          description: |
            Numero na rua
            Address number
          example: 31
        additionalInformation:
          type: string
          description: |
            Complemento
            Complement
          example: Bloco A - Apto 410
        district:
          type: string
          description: |
            Bairro
            District
          example: Vila Nova Cachoeirinha
        city:
          type: string
          description: |
            Cidade
            City
          example: São Paulo
        state:
          type: string
          description: |
            Estado
            Estate
          example: SP
        zipcode:
          type: string
          description: |
            CEP
            Postal code / Zip code
          example: 08090-070
        country:
          type: string
          description: |
            Pais
            Country
          example: Brasil
        reference:
          type: string
          description: |
            Ponto de referencia
            Landmark
          example: Proximo ao Shopping Bourbon

    Phone:
      type: object
      properties:
        type:
          type: number
          description: |
            Tipo de telefone
            Phone type
          example: 1
        ddi:
          type: number
          description: |
            DDI
          example: 55
        ddd:
          type: number
          description: |
            DDD
            Area code
          example: 11
        phoneNumber:
          type: number
          description: |
            Numero de telefone
            Phone number
          example: 999999999
        extension:
          type: string
          description: |
            Ramal
            Extension
          example: 2552

    Card:
      type: object
      properties:
        maskedPAN:
          type: string
          description: |
            Cartão mascarado
            Masked PAN
          example: 123456xxxxxx1234
        hash:
          type: string
          description: |
            ***
            The cardholder document
          example: "12345678945612301234569874563210"
        bin:
          type: string
          description: |
            Bin
            The cardholder document
          example: 123456
        end:
          type: string
          description: |
            Final do cartão
            Name printed on card
          example: 1234
        brandCode:
          type: number
          description: |
            Codigo da bandeira
            Brand code
            **The below table defines the brands code**
            | Method Code    | Method Name |
            | ---------------| ------------| 
            | 1              | Visa        | 
            | 2              | MasterCard  |
            | 3              | Diners      |
            | 4              | Outros      |
          example: 1
        expirationMonth:
          type: string
          description: |
            Mes de expiração do cartão
            Month's date of expiration
          example: 05
        expirationYear:
          type: string
          description: |
            Ano de expiração do cartão
            Year's date of expiration
          example: 2029
        cardholderName:
          type: string
          description: |
            Nome impresso no cartão
            Card's printed name
          example: John Ronald Tolkien
        cardholderDocumentNumber:
          type: string
          description: |
            Documento do portador
            Cardholder's document
          example: 12345678910
        tid:
          type: string
          description: |
            Identificador da transação
            Transaction Id
          example: 123548761315847687436

    OrderStatus:
      type: object
      properties:
        annotations:
          type: array
          items:
            type: string
            description: |
              Observações
              Observations
            example: Contato realizado com o portador do cartão
        status1:
          type: string
          description: |
            Status do primeiro estimulo
            First stimulus status
          example: 1
        status2:
          type: string
          description: |
            Status do segundo estimulo            
            Second stimulus stimulus
          example: 2
        conclusion:
          type: string
          description: |
            Conclusão do pedido
            Order's finalized
          example: 3

    OrdersList:
      type: object
      description: |
        Lista de pedidos
        Order's list
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/ShortOrder"

    ShortOrder:
      type: object
      properties:
        partner:
          type: string
          description: |
            Nome da loja parceira
            Partner's store name
          example: MegaLeo
        vortexOrderId:
          type: string
          format: uuid
          description: |
            Codigo do pedido Vortex
            Vortex order code
          example: 9f190647-7615-43ab-9fc6-8129af51fbc4
        partnerOrderId:
          type: integer
          format: int64
          description: |
            Codigo do pedido loja parceira
            Partner's store order code
          example: 1512
        orderDateTime:
          type: string
          description: |
            Data do pedido
            Order's date
          example: "2023-03-09T21:38:59.9894222"
        orderStatus:
          description: |
            Status do pedido
            Order status
          $ref: "#/components/schemas/OrderStatus"
        
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Response code
        message:
          type: string
          example: Response message

  responses:
    NoContent:
      description: |
        No Content
      $ref: '#/components/schemas/Error'
    BadRequest:
      description: |
        Bad Request
      $ref: '#/components/schemas/Error'
    Unauthorized:
      description: |
        Unauthorized
      $ref: '#/components/schemas/Error'
    Forbidden:
      description: |
        Forbidden
      $ref: '#/components/schemas/Error'
    NotFound:
      description: |
        Not Found
      $ref: '#/components/schemas/Error'
    Conflict:
      description: |
        Conflict
      $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: |
        Unprocessable Content
      $ref: '#/components/schemas/Error'
    InternalServerError:
      description: |
        Internal Server Error
      $ref: '#/components/schemas/Error'


  securitySchemes:
    vortexOauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vortex-paas/v1/oauth/partner/{partnerId}
          scopes:
            order: toDo
            user: toDo
            partner: toDo

    api_key:
      type: apiKey
      name: x-api-key 
      in: header
